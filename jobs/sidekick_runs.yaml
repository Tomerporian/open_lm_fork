job_details:
  name: sidekick_runs_rerun_const
  output_dir: exps
parameters:
    model: ['layers=14_hidden-dim=576']
    accum_freq: [2]
    LIST_BUDGETS_SCHEDS:
      # - train_num_samples: [300000000] # ~300M, so *100 = 30B tokens
      #   lr_scheduler: ['cosine', 'const-cooldown', 'hybrid-cooldown']
        # epochs_cooldown: [5]
      - train_num_samples: [400000000] # ~400M, so *100 = 40B tokens
        lr_scheduler: ['const', 'hybrid']
        epochs_cooldown: [5]
      # - train_num_samples: [385000000] # ~385M, so *100 = 38.5B tokens
      #   lr_scheduler: ['const-cooldown', 'hybrid-cooldown']
      #   epochs_cooldown: [5]
    warmup: [1000]
    dataset_resampled: [false]
    precision: ['amp_bfloat16']
    batch_size: [16]
    grad_checkpointing: [true]
    log_every_n_steps: [20]
    csv_log: [true]
    grad_clip_norm: [1]
    beta1: [0.9]
    beta2: [0.95]
    eps: [1.0e-08]
    report_to: ['wandb']
    resume: ['latest']
    data_key: ['json']
    lr_cooldown_end: [0.0]
    qk_norm: [true]
    z_loss_coefficient: [0.0001]
    # lr_scheduler: ['cosine', 'const-cooldown', 'const', 'hybrid', 'hybrid-cooldown']
    wd: [0.033]
    lr: [0.0015, 0.00212] # samir param
    epochs: [100]
    wandb_project_name: ['lm_grid_160m_more_avgs']
    log_avg_model_training_loss: [20]
    delete_previous_checkpoint: [true]
    keep_freq: [5]
    keep_from: [75]
    # keep_powers_of_two: [5]
    workers: [2]
    averagers: ['poly_32_1,poly_64_1']