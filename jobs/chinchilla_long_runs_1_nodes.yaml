job_details:
  name: chinchilla_long_runs_1_nodes
  output_dir: exps_final_runs
  num_gpus: 4
  num_nodes: 1
parameters:
    LIST_MODEL_TOKENS:
      - model: ['layers=3_hidden-dim=96']
        LIST_ROUND_MAX_CKPTS:
          - train_num_samples: [1006782] # ~1M
            max_checkpoints_flops: [5]
          - train_num_samples: [2013564, 4027128] # ~2M, 4M
            max_checkpoints_flops: [1]

      - model: ['layers=4_hidden-dim=128']
        LIST_ROUND_MAX_CKPTS:
          - train_num_samples: [1388172] # ~1.4M
            max_checkpoints_flops: [5]
          - train_num_samples: [2776344, 5552688] # ~2.8M, 5.6M
            max_checkpoints_flops: [1]

      - model: ['layers=5_hidden-dim=160']
        LIST_ROUND_MAX_CKPTS:
          - train_num_samples: [2123700] # ~2.1M
            max_checkpoints_flops: [5]
          - train_num_samples: [4247401, 8494802] # ~4.2M, 8.5M
            max_checkpoints_flops: [1]

      - model: ['layers=6_hidden-dim=224']
        LIST_ROUND_MAX_CKPTS:
          - train_num_samples: [2671356] # ~2.7M
            max_checkpoints_flops: [5]
          - train_num_samples: [5342712, 10685424] # ~5.3M, 10.7M
            max_checkpoints_flops: [1]
            
    warmup_tokens: [1572864000, 13107200]
    dataset_resampled: [false]
    precision: ['amp_bfloat16']
    batch_size: [16] # global batch size is 16*4 = 64
    grad_checkpointing: [true]
    log_every_n_steps: [20]
    csv_log: [true]
    grad_clip_norm: [1]
    beta1: [0.9]
    beta2: [0.95]
    eps: [1.0e-08]
    report_to: ['wandb']
    resume: ['latest']
    data_key: ['json.gz']
    lr_cooldown_end: [3.0e-05] # in the rpj config it was like that, so I keep it
    qk_norm: [true]
    z_loss_coefficient: [0.0001]
    lr_scheduler: ['cosine']
    wd: [0.033]
    lr: [3.0e-03] 
    epochs: [100]
    wandb_project_name: ['lm_grid_160m_more_avgs']
    delete_previous_checkpoint: [true]
    workers: [2]
    accum_freq: [1]
    flops_to_save: ['3.125e+15,6.250e+15,1.250e+16,2.500e+16,5.000e+16,1.000e+17,2.000e+17,4.000e+17,8.000e+17,1.600e+18,3.200e+18,6.400e+18,1.280e+19,2.560e+19,5.120e+19,1.024e+20']
    train_data: ["/p/fastdata/mmlaion/lmdata_2/refined_web_tokenized/{00001001..00042512}.tar"]
    # if there are 600B tokens in RW, and all of them are uniformly distributed in the shards, then each shard has 600B/42512 = 14.1M tokens
    # so, keeping 1000 shards for validation, we have 1000*14.1M = 14.1B tokens for validation